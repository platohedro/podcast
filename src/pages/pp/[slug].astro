---
import { CollectionEntry, getCollection } from "astro:content";
import { ppSchema } from "../../content/config";
import AudioPlayer from "../../components/audioPlayer.astro";
import PlainTextRenderer from "marked-plaintext";
import { marked } from "marked";
import astropodConfig from "../../../.astropod/astropod.config.json";
import PpLayout from "../../layouts/PpLayout.astro";

export async function getStaticPaths() {
  const postEntries = await getCollection("pp");
  return postEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"pp">;
}

const { entry } = Astro.props;
const pp: ppSchema = entry.data;
const { Content } = await entry.render();

const renderer = new PlainTextRenderer();
const description = marked.parse(entry.body.slice(0, 500), { renderer: renderer }).slice(0, 200);
---

<PpLayout
  title={pp.title}
  pubDate={pp.pubDate}
  cover={pp.cover}
  explicit={pp.explicit}
  description={description}
  cover={pp.cover}
>
  <Content />
</PpLayout>

<AudioPlayer />

<script define:vars={{ pp }}>
const musicPlayer = document.getElementById("audio-player-container");
const audioDownloadLink = document.getElementById("audio-download-link");
const audioControl = document.getElementById("audio-control");
const audioLoading = document.getElementById("audio-loading");
const footer = document.querySelector(".footer > div");

musicPlayer?.classList.remove("hidden", "opacity-0");
musicPlayer?.classList.add("flex");
const audio = document.querySelector("audio");
audio.src = radiocypher.audioUrl;
audioLoading?.classList.remove("hidden");
audioControl?.classList.add("hidden");
footer?.classList.add('pb-24');
audioDownloadLink.href = radiocypher.audioUrl;
</script>
