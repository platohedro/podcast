---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import astropodConfig from "../../../.astropod/astropod.config.json";
import HeaderCard from "../../components/headerCard/HeaderCard.astro";
import AudioPlayer from "../../components/audioPlayer.astro";
import PlainTextRenderer from "marked-plaintext";
import { marked } from "marked";
import Pagination from "../../components/pagination.astro";

const renderer = new PlainTextRenderer();

export async function getStaticPaths({ paginate }) {
  const pps = await getCollection("pp");
  pps.sort((a, b) => {
    const pubDateA = a.data.pubDate ? a.data.pubDate.valueOf() : 0;
    const pubDateB = b.data.pubDate ? b.data.pubDate.valueOf() : 0;
    return pubDateB - pubDateA;
  });
  return paginate(pps, { pageSize: astropodConfig.pageSize });
}
const { page } = Astro.props;
---

<BaseLayout>
  <HeaderCard title={astropodConfig.name} subtitle={astropodConfig.author} />

  <div class="card min-w-full bg-base-100 shadow-md p-3 pb-3 mt-12">
    {
      page && page.data && page.data.map((pp, index) => (
        <HorizontalCard
          title={pp.data.title}
          cover={pp.data.cover}
          desc={marked.parse(pp.body.slice(0, 500), { renderer: renderer })}
          url={"/pp/" + pp.slug}
          audioUrl={pp.data.audioUrl}
          pubDate={pp.data.pubDate}
          duration={pp.data.duration}
          id={"card-" + index}
        />
      ))
    }
  </div>

  {page && page.url && (page.url.next || page.url.prev) && <Pagination page={page} />}
</BaseLayout>

<AudioPlayer />