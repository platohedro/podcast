---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import astropodConfig from "../../.astropod/astropod.config.json";
import HeaderCard from "../components/headerCard/HeaderCard.astro";
import AudioPlayer from "../components/audioPlayer.astro";
import PlainTextRenderer from "marked-plaintext";
import { marked } from "marked";
import Pagination from "../components/pagination.astro";

const renderer = new PlainTextRenderer();

export async function getStaticPaths({ paginate }) {
  const radiocyphers = await getCollection("radiocypher");
  radiocyphers.sort((a, b) => {
    if (!a.data.pubDate || !b.data.pubDate) {
      return 0;
    }
    return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
  });
  return paginate(radiocyphers, { pageSize: astropodConfig.pageSize });
}
const { page } = Astro.props;
---

<BaseLayout>
  <HeaderCard title={astropodConfig.name} subtitle={astropodConfig.author} />

  <div class="card min-w-full bg-base-100 shadow-md p-3 pb-3 mt-12">
    {
      page && page.data && page.data.map((radiocypher, index) => (
        <HorizontalCard
          title={radiocypher.data.title}
          cover={radiocypher.data.cover}
          desc={marked.parse(radiocypher.body.slice(0, 500), { renderer: renderer })}
          url={"/radiocypher/" + radiocypher.slug}
          audioUrl={radiocypher.data.audioUrl}
          pubDate={radiocypher.data.pubDate}
          duration={radiocypher.data.duration}
          id={"card-" + index}
        />
      ))
    }
  </div>
  <h1>Hola</h1>
  {page && page.url && (page.url.next || page.url.prev) && <Pagination page={page} />}
</BaseLayout>